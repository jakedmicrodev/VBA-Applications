Monthly Spending V2 SRS

Introduction

1.1 Purpose
	This product is designed to import spending data from a spreadsheet into another formatted spreadsheet to show
	monthly spending by category and sub category as well as display spending for combined accounts and separate accounts.
	
1.2 Intended Audience
	This is for anyone who wants an easy way to import spending data to a separate formatted spreadsheet. 
	
1.3 Intended Use
	This is to document a personal project for use in job interviews as well as documentation for the software development, and testing of the product.
	
1.4 Scope
	This product allows the user to use a form in a separate spreadsheet to initially format the destination spreadsheet and select which account type to update and for which month of the current year.

1.5 Definitions and Acronyms
	
2. Overall Description
	This product should provide a simple way for the user to create a spreadsheet to hold monthly spending data and allow them to select the type of account and month to update. It will add a column of data in the selected spreadsheet for the categories or sub categories.
	
2.1 User Needs
	This product can be used by anyone wanting to accumulate spending data in a more comprehensive way than what is presented by a financial institution's web application.
	The driving reason behind this product is to provide a simple form to acquire the data rather than using copy and paste.
	
2.2 Assumptions and Dependencies
	The design of this product should separate the front end, application code, and data store as much as possible so any of them can change without affecting the others.
	This may be used to keeep a historical record of past spending.
	
3. System Features and Requirements

    3.1 Functional Requirements
		Source data should come from the CSV file provided by the user's financial institution that has been saved as a Microsoft Excel file.
		Secondary data should come from a new spreadsheet that will be formatted by the application.
		
    3.2 External Interface Requirements
		The user is required to have Microsoft Excel installed on their computer.
		The source and destination Excel files should be accessable to the user's computer.
		The application should be able to run on any Microsoft Windows operating system
		
    3.3 System Features
		Windows operating system
		Microsoft Excel
		VBAProject References
			Visual Basic For Applications
			Microsoft Excel 14.0 Object Library
			OLE Automation
			Microsoft Office 14 Object Library
			Microsoft 2.0 Object Library
			Microsoft ActiveX Data Objects 6.1 Library
		
    3.4 Nonfunctional Requirements
	
